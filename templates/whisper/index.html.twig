{% extends 'base.html.twig' %}

{% block body %}
<div class="w-full max-w-7xl h-[90%] flex flex-col">
    <section class="w-full  flex-none flex flex-col py-2 space-y-2 rounded-lg ">
        <h2 class="text-lg font-semibold">Tout commence par un ficher audio</h2>
        <twig:UploadAudio />
    </section>
    <section class="w-full flex flex-col flex-1 basis-0 overflow-auto p-4">
      <div class="h-8 flex-none">
{#        <h2>Traitement</h2>#}
        <div id="status"> </div>
        <div id="progress"></div>
      </div>
      <div class="w-full grow basis-0 flex-1 overflow-y-scroll border border-gray-900 dark:border-gray-50" id="transcription"></div>
    </section>

</div>

    {% endblock %}

{% block js %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            console.log('DOM chargé');
            const progressDiv = document.getElementById('progress');
            const transcriptionDiv = document.getElementById('transcription');
            const status = document.getElementById('status');

            if (!progressDiv || !transcriptionDiv) {
                console.error('Elements progress ou transcription non trouvés');
                return;
            }

            const eventSource = new EventSource("{{ mercure([
                'progression',
                'transcription'
            ])|escape('js') }}");
            
            eventSource.onmessage = event => {
                try {
                    const data = JSON.parse(event.data);
                    console.log('Message reçu:', data);
                    
                    if (data.status !== undefined){
                        status.textContent = data.status
                      }
                    if (data.progression === true) {
                        console.log('Progression !!!!!!!!!!!!!!!!!!!!! :   ', data.message);
                        progressDiv.textContent += "* ";
                    } else {
                        transcriptionDiv.innerHTML += data.message;
                    }
                } catch (error) {
                    console.error('Erreur de parsing JSON:', error);
                }
            };

            eventSource.onerror = error => {
                console.error('Erreur Mercure:', error);
            };
        });
    </script>
{% endblock %}
